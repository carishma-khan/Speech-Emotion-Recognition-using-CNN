# Paths for data.
Ravdess = "G:/TRIER/Semester 3/ML4NLU/Project Implementation/SER Project/Datasets/ravdess-emotional-speech-audio/audio_speech_actors_01-24/"
Crema = "G:/TRIER/Semester 3/ML4NLU/Project Implementation/SER Project/Datasets/cremad/AudioWAV/"
Tess = "G:/TRIER/Semester 3/ML4NLU/Project Implementation/SER Project/Datasets/toronto-emotional-speech-set-tess/tess toronto emotional speech set data/TESS Toronto emotional speech set data/"
Savee = "G:/TRIER/Semester 3/ML4NLU/Project Implementation/SER Project/Datasets/surrey-audiovisual-expressed-emotion-savee/ALL/"
Emo="G:/TRIER/Semester 3/ML4NLU/Project Implementation/SER Project/Datasets/berlin-database-of-emotional-speech-emodb/wav/"

ravdess_list = os.listdir(Ravdess)

file_emotion = []
file_path = []
for dir in ravdess_list:
    # as their are 20 different actors in our previous directory we need to extract files for each actor.
    actor = os.listdir(Ravdess + dir)
    for file in actor:
        part = file.split('.')[0]
        part = part.split('-')
        # third part in each file represents the emotion associated to that file.
        file_emotion.append(int(part[2]))
        file_path.append(Ravdess + dir + '/' + file)
        
# dataframe for emotion of files
emotion_df = pd.DataFrame(file_emotion, columns=['Emotions'])

# dataframe for path of files.
path_df = pd.DataFrame(file_path, columns=['Path'])
Ravdess_df = pd.concat([emotion_df, path_df], axis=1)

# changing integers to actual emotions.
Ravdess_df.Emotions.replace({1:'neutral', 2:'calm', 3:'happy', 4:'sad', 5:'angry', 6:'fear', 7:'disgust', 8:'surprise'}, inplace=True)
Ravdess_df.head()

crema_list = os.listdir(Crema)

file_emotion = []
file_path = []

for file in crema_list:
    # storing file paths
    file_path.append(Crema + file)
    # storing file emotions
    part=file.split('_')
    if part[2] == 'SAD':
        file_emotion.append('sad')
    elif part[2] == 'ANG':
        file_emotion.append('angry')
    elif part[2] == 'DIS':
        file_emotion.append('disgust')
    elif part[2] == 'FEA':
        file_emotion.append('fear')
    elif part[2] == 'HAP':
        file_emotion.append('happy')
    elif part[2] == 'NEU':
        file_emotion.append('neutral')
    else:
        file_emotion.append('Unknown')
        
# dataframe for emotion of files
emotion_df = pd.DataFrame(file_emotion, columns=['Emotions'])

# dataframe for path of files.
path_df = pd.DataFrame(file_path, columns=['Path'])
Crema_df = pd.concat([emotion_df, path_df], axis=1)
Crema_df.head()

tess_list = os.listdir(Tess)

file_emotion = []
file_path = []

for dir in tess_list:
    directories = os.listdir(Tess + dir)
    for file in directories:
        part = file.split('.')[0]
        part = part.split('_')[2]
        if part=='ps':
            file_emotion.append('surprise')
        else:
            file_emotion.append(part)
        file_path.append(Tess + dir + '/' + file)
        
# dataframe for emotion of files
emotion_df = pd.DataFrame(file_emotion, columns=['Emotions'])

# dataframe for path of files.
path_df = pd.DataFrame(file_path, columns=['Path'])
Tess_df = pd.concat([emotion_df, path_df], axis=1)
Tess_df.head()

savee_list = os.listdir(Savee)

file_emotion = []
file_path = []

for file in savee_list:
    file_path.append(Savee + file)
    part = file.split('_')[1]
    ele = part[:-6]
    if ele=='a':
        file_emotion.append('angry')
    elif ele=='d':
        file_emotion.append('disgust')
    elif ele=='f':
        file_emotion.append('fear')
    elif ele=='h':
        file_emotion.append('happy')
    elif ele=='n':
        file_emotion.append('neutral')
    elif ele=='sa':
        file_emotion.append('sad')
    else:
        file_emotion.append('surprise')
        
# dataframe for emotion of files
emotion_df = pd.DataFrame(file_emotion, columns=['Emotions'])

# dataframe for path of files.
path_df = pd.DataFrame(file_path, columns=['Path'])
Savee_df = pd.concat([emotion_df, path_df], axis=1)
Savee_df.head()


Emo_list = os.listdir(Emo)
    file_emotion = []
    file_path = []
for dir in Emo_list:
      file_path.append(Emo + dir)
       
                if name[0:2] in '0310111215':  # MALE
                    if name[5] == 'W':  # Ärger (Wut) -> Angry
                        file_emotion.append('angry')
                    elif name[5] == 'E':  # Ekel -> Disgusted
                        file_emotion.append('disgust')
                    elif name[5] == 'A':  # Angst -> Angry
                        emotion.append('fear')
                    elif name[5] == 'F':  # Freude -> Happiness
                        file_emotion.append('happy')
                    elif name[5] == 'T':  # Trauer -> Sadness
                        file_emotion.append('sad')
                    elif name[6] == 'N':
                        file_emotion.append('neutral')
                    else:
                        file_emotion.append('unknown')
                else:
                    if name[5] == 'W':  # Ärger (Wut) -> Angry
                        file_emotion.append('angry')
                    elif name[5] == 'E':  # Ekel -> Disgusted
                        file_emotion.append('disgust')
                    elif name[5] == 'A':  # Angst -> Angry
                        file_emotion.append('fear')
                    elif name[5] == 'F':  # Freude -> Happiness
                        file_emotion.append('happy')
                    elif name[5] == 'T':  # Trauer -> Sadness
                        file_emotion.append('sad')
                    elif name[6] == 'N':
                        file_emotion.append('neutral')
                    else:
                        file_emotion.append('unknown')            

# dataframe for emotion of files
emotion_df = pd.DataFrame(file_emotion, columns=['Emotions'])

# dataframe for path of files.       
path_df = pd.DataFrame(file_path, columns=['Path'])
emo_df = pd.concat([emotion_df, path_df], axis=1)
emodb_df = pd.concat([emodb_df, pd.DataFrame(file_path, columns=['path'])], axis=1)
emodb_df.head()

# creating Dataframe using all the 4 dataframes we created so far.
data_path = pd.concat([Ravdess_df, Crema_df, Tess_df, Savee_df, emodb_df], axis = 0)
data_path.to_csv("Emotion_data.csv",index=False)
data_path.head()
